{"version":3,"sources":["Components/Note.js","Components/Notification.js","Components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","key","find","n","changedNode","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"uNAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCM3BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAgB,OAAZA,EACI,KAIP,yBAAKJ,UAAU,SACbI,ICQWC,EAfA,WAOd,OACC,yBAAKC,MAPc,CACnBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKT,6BACA,uG,gBCMY,EAfA,WAEb,OADgBC,IAAMC,IAHR,UAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KARR,SAQsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,MAQnB,EALA,SAACI,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,SAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCkE5BK,G,MA1EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,qBAFd,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAAqBlB,MAAK,SAAAmB,GACxBT,EAASS,QAEV,IACHC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IAAMC,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAAAxC,GAAI,OAAIA,EAAKG,aA4ChE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAASuB,IACvB,6BACE,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QAAmDA,EAAU,YAAc,QAE7E,4BA3BFU,EAAYE,KAAI,SAAAzC,GAAI,OAAI,kBAAC,EAAD,CAAM0C,IAAK1C,EAAKqB,GAAIrB,KAAMA,EAAMC,iBAAkB,kBAtBjD,SAAAoB,GACzB,IAAMrB,EAAOyB,EAAMkB,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,KAAOA,KAChCwB,EAAW,eAAQ7C,EAAR,CAAcG,WAAYH,EAAKG,YAEhD+B,EAAmBb,EAAIwB,GAAa7B,MAAK,SAAA8B,GACvCpB,EAASD,EAAMgB,KAAI,SAAAzC,GAAI,OAAKA,EAAKqB,KAAOA,EAAKrB,EAAO8C,SAEnDC,OAAM,SAAAC,GACLhB,EAAgB,SAAD,OACJhC,EAAKK,QADD,sCAGf4C,YAAW,WACTjB,EAAgB,QACf,KACHN,EAASD,EAAMe,QAAO,SAAAI,GAAC,OAAIA,EAAEvB,KAAOA,SAQwC6B,CAAmBlD,EAAKqB,WA4BtG,0BAAM8B,SA1BM,SAAAC,GACdA,EAAMC,iBACN,IAAMC,EAAa,CACjBjD,QAASsB,EACT4B,MAAM,IAAIC,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAE7BzB,EAAmBoB,GAAYtC,MAAK,SAAA8B,GAClCpB,EAASD,EAAMmC,OAAOd,IACtBlB,EAAW,SAkBT,2BAAOiC,MAAOlC,EAASmC,SAdJ,SAAAV,GACvBhB,QAAQC,IAAIe,EAAMW,OAAOF,OACzBjC,EAAWwB,EAAMW,OAAOF,UAapB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,SCxENC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a5ddd300.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? 'make not important' : 'make important';\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n\tif (message === null) {\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"error\">\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Notification;","import React from 'react'\r\n\r\nconst Footer = () => {\r\n\tconst footerStyle = {\r\n\t\tcolor: 'green',\r\n\t\tfontStyle: 'italic',\r\n\t\tfontSize: 16\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={footerStyle}>\r\n\t\t\t<br />\r\n\t\t\t<em>Note app, Department of Computer Science, University of Helsinki 2019</em>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Footer","import axios from 'axios';\r\nconst baseUrl = '/notes';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default { getAll, create, update };","import React, { useState, useEffect } from 'react';\nimport Note from './Components/Note';\nimport Notification from './Components/Notification';\nimport Footer from './Components/Footer';\nimport noteService from './services/notes';\nimport './index.css';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState();\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('some error happened...');\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  console.log('render', notes.length, 'notes');\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNode = { ...note, important: !note.important };\n\n    noteService.update(id, changedNode).then(returnedNote => {\n      setNotes(notes.map(note => (note.id !== id ? note : returnedNote)));\n    })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n    // axios.put(url, changedNode).then(response => {\n    //   setNotes(notes.map(note => (note.id !== id ? note : response.data)));\n    // });\n  };\n\n  const rows = () =>\n    notesToShow.map(note => <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />);\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>show {showAll ? 'important' : 'all'}</button>\n      </div>\n      <ul>{rows()}</ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}